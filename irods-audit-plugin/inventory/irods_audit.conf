input {
    # Read the audit_messages queue messages using the amqp protocol
    rabbitmq {
      host => "localhost"
      queue => "audit_messages"
    }
}

filter {

    if "_jsonparsefailure" in [tags] {
        mutate {
                  gsub => [ "message", "[\\\\]","" ]
                  gsub => [ "message", ".*__BEGIN_JSON__", ""]
                  gsub => [ "message", "__END_JSON__", ""]

        }
        mutate { remove_tag => [ "tags", "_jsonparsefailure" ] }
        json { source => "message" }

    }


    # Parse the JSON message
    json {
        source       => "message"
        remove_field => ["message"]
    }

    # Replace @timestamp with the timestamp stored in time_stamp
    date {
        match => [ "time_stamp", "UNIX_MS" ]
    }

    # Convert select fields to integer
    mutate {
        convert => { "int" => "integer" }
        convert => { "int__2" => "integer" }
        convert => { "int__3" => "integer" }
        convert => { "file_size" => "integer" }
    }

}

output {
    # Write the output to elastic search under the irods_audit index.
    elasticsearch {
        hosts => ["localhost:9200"]
        index => "irods_audit"
    }
    stdout {
        codec => rubydebug {}
    }
}
